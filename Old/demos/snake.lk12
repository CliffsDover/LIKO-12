local code = [[--##################################
--SIMPLE SNAKE GAME
--CREATED BY COSME12
--V 0.1
--21/10/2016
--LIKO12 V 0.04
--feel free to edit and improve it!
--more info: http://github.com/RemiLego4Game/LIKO-12
--###################################

function _init()
 Body = {}
 x = 96 --Head coords
 y = 64
 delta_x = 0 --Used to set moving direction
 delta_y = 8
 last_press = "down" --Last key pressed
 table.insert(Body,{x,y-8})
 table.insert(Body,{x,y-16})
 time = 0
 speed = 0.2 --Snake moving speed in seconds
 field = {{8,183},{8,119}} --Safe zone, after that u die
 gameOver = 0 --If 1 game is over
 headSprite = 1
 ateApple = 0
 keyPressed = 0 --Used to prevent fast press
 addApple()
end

function _update(dt)
 if time >= speed and gameOver == 0 then --Runs every x seconds
  time = 0
  keyPressed = 0
  if ateApple == 0 then
   --clear(16) --Start drawing after this
   drawField()
  end
  drawBorders()
  local last_x = x 
  local last_y = y
  local last_x2 = x --Used to avoid Lua table
  local last_y2 = y --problems
  x = x + delta_x 
  y = y + delta_y
  Sprite(headSprite,x,y)
  if ateApple == 0 then
   for k,v in pairs(Body) do   
    if k == 1 then
     last_x2 = v[1]
     last_y2 = v[2]
     Body[k][1] = last_x  
     Body[k][2] = last_y
     last_x = last_x2
     last_y = last_y2
    else
     last_x2 = v[1]
     last_y2 = v[2]
     Body[k][1] = last_x
     Body[k][2] = last_y
     last_x = last_x2
     last_y = last_y2 
    end
    Sprite(2,Body[k][1],Body[k][2])
   end
   checkCollision()
   Sprite(3,apple[1]*8,apple[2]*8)
  else
   ateApple = 0
   Sprite(2,Body[1][1],Body[1][2])
  end
 else
  time = time + dt
 end
end

function checkCollision()
 if x > field[1][2] or
    x < field[1][1] or 
    y > field[2][2] or
    y < field[2][1] then --Border collision
  endGame()
 end
 if x == apple[1]*8 and y == apple[2]*8 then
  addApple()
  addBody()
 end
 for k,v in pairs(Body) do
  if x == v[1] and y == v[2] and ateApple == 0 then
   endGame()
  end
 end
end

function endGame()
 gameOver = 1
 color(1) print("GAME OVER",76,54)
 print("Press R to restart",60,62)
 print("Created by COSME12",60,80)
end

function addApple() --Creates new apple at rnd position 
 local new_apple = 1
 while new_apple == 1 do --Repeats until apple is in free tile
  apple = {math.random(22),math.random(14)}
  new_apple = 0
  for k,v in pairs(Body) do
   if apple[1]*8 == v[1] and apple[2]*8 == v[2] then 
    new_apple = 1
   end
  end
 end
end

function addBody() --Adds a new body part after
 table.insert(Body,1,{x,y}) --eating apple
 ateApple = 1
end

--Draws sand details
function drawField()
 clear(16)
 Map = {{80,110},{160,80},{170,110},{12,65},{80,90},{130,20},{74,74},{29,100},{16,10},{11,100},{170,25},{114,60},{139,50}}
 for k,v in pairs(Map) do
  Sprite(6, v[1], v[2])
  Sprite(7, v[1]/2, v[2]/2)
  Sprite(8, v[1]*1.2, v[2]*1.2)
  Sprite(9, v[1]/1.3, v[2]*1.3)
 end
end

function drawBorders()
 for i = 0, 23, 2 do
  Sprite(4,8*i+1,0) --Top border
  Sprite(4,8*i+1,120) --Down
 end
 for i = 1, 23, 2 do 
  Sprite(5,8*i+1,0) --Top
  Sprite(5,8*i+1,120) --Down
 end
 for i = 2, 14, 2 do
  Sprite(4,0,8*i) --Left
  Sprite(4,184,8*i+1) --Right
 end
 for i = 1, 14, 2 do
 Sprite(5,0,8*i) --Left
 Sprite(5,184,8*i+1) --Right
 end
end

--Key press function
function _kpress(k)
 if gameOver == 1 then --Pressing buttons after
  keyPressed = 0 --game finished lets  you restart
 end
 if keyPressed == 0 then
  keyPressed = 1
  if k == "down" and last_press ~= "up" then
   delta_x = 0
   delta_y = 8
   last_press = "down"
   headSprite = 1
  elseif k == "up" and last_press ~= "down" then
   delta_x = 0
   delta_y = -8
   last_press = "up"
   headSprite = 26
  elseif k == "right" and last_press ~= "left" then
   delta_x = 8
   delta_y = 0
   last_press = "right"
   headSprite = 25
  elseif k == "left" and last_press ~= "right" then
   delta_x = -8
   delta_y = 0
   last_press = "left"
   headSprite = 49
  elseif k == "r" then --Restart game
   _init()
  end
 end
end]]

local spritemap = 'iVBORw0KGgoAAAANSUhEUgAAAMAAAABgBAMAAAC57mDaAAAAIVBMVEUAAAAAh1Fdu038zKscK1P/8elRptz6ohv37C/tG1F/JFSVgPNzAAAAAXRSTlMAQObYZgAAAQJJREFUeJzt1LEOgjAQBuDTxJAwYd+gTOjsG9gwOxgTd2RmdWXTiThZJ+MkPqVcBYU4ltv+L+lEcn+ud4VoPid39JRWxqz50MCMvEziOOJDFFGa51tjTBbwh6I5gV9tRyWJVmWpyVpKd3lmMmO6b2PUJy7OIaHdV00HTXkO2IxRug14Ll0HoT32AlgbUvgGXE5tB7ZKD01AygHd5XgOmHVDDmt7H3bwjfEcRbemr9dgTXtTGClAyu8dCFFlrdV1oeUC+KE9zoIB7UOTC0jqz69CiviQxddUtjh9rkg0QN0EB+wCJFfUBUiuqAu4CXcgPmTxNQUAAAAAAAAAAAAAAACAP28/XTdE8xE4igAAAABJRU5ErkJggg=='

local tilemap = 'iVBORw0KGgoAAAANSUhEUgAAABgAAAAJAQMAAAASM36FAAAABlBMVEUAAABIAADb7mW3AAAAAnRSTlMAAHaTzTgAAAAoSURBVHicY2BgsGBgCKhhYPz/hYEZjB8w8P8/wMD+/wOQ/sHA3v8GANR3Dh3ld3MWAAAAAElFTkSuQmCC'

return {code=code,spritemap=spritemap,tilemap=tilemap}